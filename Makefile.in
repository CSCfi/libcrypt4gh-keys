SHELL := /bin/bash
AR     = @AR@
RANLIB = @RANLIB@
CC     = @CC@
CFLAGS = @CFLAGS@ -fPIC -I@srcdir@/src -I@srcdir@/src/include @CPPFLAGS@ @DEFS@
LIBS   = @LIBS@
LDFLAGS = @LDFLAGS@

prefix=@prefix@
exec_prefix=@exec_prefix@
LIBDIR = @libdir@
INCLUDEDIR = @includedir@

PKGCONFIGDIR = $(LIBDIR)/pkgconfig

ifdef DEBUG
CFLAGS += -DDEBUG=$(DEBUG) -g
endif

C4GH_LD_SONAME = #-Wl #,-soname,libc4gh-keys.so.2
C4GH_OBJECTS = src/kdf.o src/key.o src/ssh.o src/c4gh.o

LIBOPENSSH = src/openssh/libopenssh.a
LIBCOMPAT = src/openbsd-compat/libopenbsd-compat.a

all: 

.PHONY: all clean install
.SUFFIXES: .c .o

all: libc4gh-keys.so

$(LIBDIR) $(INCLUDEDIR) $(PKGCONFIGDIR):
	@echo "Creating: $@"
	@install -d $@

libc4gh-keys.so: libc4gh-keys.la $(LIBOPENSSH) $(LIBCOMPAT)
	@echo "Creating shared library $@"
	$(CC) -o $@ -Wl,--whole-archive $^ \
                    -Wl,--no-whole-archive -shared $(C4GH_LD_SONAME) $(LDFLAGS) $(LIBS)

libc4gh-keys.la: $(C4GH_OBJECTS)
	$(AR) rv $@ $(C4GH_OBJECTS)
	$(RANLIB) $@

# libc4gh-keys.a: libc4gh-keys.mri
# 	@echo "Creating static library $@"
# 	@$(AR) -M < $<

# .INTERMEDIATE: libc4gh-keys.mri
# libc4gh-keys.mri: $(C4GH_OBJECTS) $(LIBOPENSSH) $(LIBCOMPAT)
# 	@echo "create libc4gh-keys.a" > $@
# 	@echo "addmod $(C4GH_OBJECTS)" >> $@
# 	@echo "addlib $(LIBOPENSSH)" >> $@
# 	@echo "addlib $(LIBCOMPAT)" >> $@
# 	@echo "save" >> $@
# 	@echo "end" >> $@

$(C4GH_OBJECTS): src/config.h

$(LIBOPENSSH) $(LIBCOMPAT):
	make -C $(@D)

%.o: %.c
ifdef DEBUG
	@echo "Compiling $< (debug: $(DEBUG))"
else
	@echo "Compiling $<"
endif
	@$(CC) $(CFLAGS) -c -o $@ $<

clean:
	-rm -f libc4gh-keys.{a,la,so,mri} $(C4GH_OBJECTS)
	-@rm -f *~ 

veryclean: clean
	-make -C src/openbsd-compat clean
	-make -C src/openssh clean

distclean: clean
	-rm -f Makefile src/config.h* config.status configure config.log
	-rm -rf autom4te.cache src/.depend.old
	-make -C src/openssh $@
	-make -C src/openbsd-compat $@

install-so: libc4gh-keys.so | $(LIBDIR)
	@echo "Installing $< into $(LIBDIR)"
	@install -m 755 $< $(LIBDIR)

install-pc: libc4gh-keys.pc | $(PKGCONFIGDIR)
	@echo "Installing $< into $(PKGCONFIGDIR)"
	@install -m 644 $< $(PKGCONFIGDIR)

install-includes: src/include | $(INCLUDEDIR)
	@echo "Installing header files into $(INCLUDEDIR)"
	@cp -r $</* $(INCLUDEDIR)
# Todo: use "install" instead of cp

install: install-so install-pc install-includes

uninstall:
	@echo "Uninstalling libc4gh-keys.so from $(LIBDIR)"
	@-rm $(LIBDIR)/libc4gh-keys.so
	@echo "Uninstalling crypt4gh from $(INCLUDEDIR)"
	@-rm -r $(INCLUDEDIR)/crypt4gh/keys $(INCLUDEDIR)/crypt4gh/key.h
	@echo "Uninstalling libc4gh-keys.pc from $(PKGCONFIGDIR)"
	@-rm $(PKGCONFIGDIR)/libc4gh-keys.pc


###################################
## Dependencies
###################################
depend: depend-rebuild
	rm -f src/.depend.bak

depend-rebuild:
	mv src/.depend src/.depend.old
	rm -f src/config.h src/.depend
	touch src/config.h src/.depend
	makedepend -w1000 -I@srcdir@/src -I@srcdir@/src/include -I@srcdir@/src/include/crypt4gh @DEFS@ -Ysrc -f src/.depend src/*.c 2>/dev/null
	(echo '# Automatically generated by makedepend.'; \
	 echo '# Run "make depend" to rebuild.'; sort src/.depend ) >src/.depend.tmp
	mv src/.depend.tmp src/.depend
	rm -f src/.depend.bak
	mv src/.depend.old src/.depend.bak

depend-check: depend-rebuild
	cmp src/.depend src/.depend.bak || (echo src/.depend stale && exit 1)

# @DEPEND@
